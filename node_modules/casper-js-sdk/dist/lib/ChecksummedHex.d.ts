export declare const SMALL_BYTES_COUNT = 75;
/**
 * Returns the bytes encoded as hexadecimal with mixed-case based checksums following a scheme
 * similar to [EIP-55](https://eips.ethereum.org/EIPS/eip-55).
 * Key differences:
 * - Works on any length of data, not just 20-byte addresses
 * - Uses Blake2b hashes rather than Keccak
 * - Uses hash bits rather than nibbles
 * @param input Uint8Array to generate checksummed hex string
 * @returns checksummed hex presentation string of input
 */
export declare const encode: (input: Uint8Array) => string;
export declare const isSamecase: (value: string) => boolean;
/**
 * Verify a mixed-case hexadecimal string that it conforms to the checksum scheme
 * similar to scheme in [EIP-55](https://eips.ethereum.org/EIPS/eip-55).
 * Key differences:
 * - Works on any length of (decoded) data up to `SMALL_BYTES_COUNT`, not just 20-byte addresses
 * - Uses Blake2b hashes rather than Keccak
 * - Uses hash bits rather than nibbles
 * For backward compatibility: if the hex string is all uppercase or all lowercase, the check is
 * skipped.
 * @param input string to check if it is checksummed
 * @returns true if input is checksummed
 */
export declare const isChecksummed: (input: string) => boolean;
